{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _stopEventPropagation$fireClick = require('./handle-dom');\n\nvar _setFocusStyle = require('./handle-swal-dom');\n\nvar handleKeyDown = function handleKeyDown(event, params, modal) {\n  var e = event || window.event;\n  var keyCode = e.keyCode || e.which;\n  var $okButton = modal.querySelector('button.confirm');\n  var $cancelButton = modal.querySelector('button.cancel');\n  var $modalButtons = modal.querySelectorAll('button[tabindex]');\n\n  if ([9, 13, 32, 27].indexOf(keyCode) === -1) {\n    // Don't do work on keys we don't care about.\n    return;\n  }\n\n  var $targetElement = e.target || e.srcElement;\n  var btnIndex = -1; // Find the button - note, this is a nodelist, not an array.\n\n  for (var i = 0; i < $modalButtons.length; i++) {\n    if ($targetElement === $modalButtons[i]) {\n      btnIndex = i;\n      break;\n    }\n  }\n\n  if (keyCode === 9) {\n    // TAB\n    if (btnIndex === -1) {\n      // No button focused. Jump to the confirm button.\n      $targetElement = $okButton;\n    } else {\n      // Cycle to the next button\n      if (btnIndex === $modalButtons.length - 1) {\n        $targetElement = $modalButtons[0];\n      } else {\n        $targetElement = $modalButtons[btnIndex + 1];\n      }\n    }\n\n    _stopEventPropagation$fireClick.stopEventPropagation(e);\n\n    $targetElement.focus();\n\n    if (params.confirmButtonColor) {\n      _setFocusStyle.setFocusStyle($targetElement, params.confirmButtonColor);\n    }\n  } else {\n    if (keyCode === 13) {\n      if ($targetElement.tagName === 'INPUT') {\n        $targetElement = $okButton;\n        $okButton.focus();\n      }\n\n      if (btnIndex === -1) {\n        // ENTER/SPACE clicked outside of a button.\n        $targetElement = $okButton;\n      } else {\n        // Do nothing - let the browser handle it.\n        $targetElement = undefined;\n      }\n    } else if (keyCode === 27 && params.allowEscapeKey === true) {\n      $targetElement = $cancelButton;\n\n      _stopEventPropagation$fireClick.fireClick($targetElement, e);\n    } else {\n      // Fallback - let the browser handle it.\n      $targetElement = undefined;\n    }\n  }\n};\n\nexports['default'] = handleKeyDown;\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/Users/tparsai/personalGithub/TP_website_react/node_modules/sweetalert/lib/modules/handle-key.js"],"names":["Object","defineProperty","exports","value","_stopEventPropagation$fireClick","require","_setFocusStyle","handleKeyDown","event","params","modal","e","window","keyCode","which","$okButton","querySelector","$cancelButton","$modalButtons","querySelectorAll","indexOf","$targetElement","target","srcElement","btnIndex","i","length","stopEventPropagation","focus","confirmButtonColor","setFocusStyle","tagName","undefined","allowEscapeKey","fireClick","module"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _stopEventPropagation$fireClick = require('./handle-dom');\n\nvar _setFocusStyle = require('./handle-swal-dom');\n\nvar handleKeyDown = function handleKeyDown(event, params, modal) {\n  var e = event || window.event;\n  var keyCode = e.keyCode || e.which;\n\n  var $okButton = modal.querySelector('button.confirm');\n  var $cancelButton = modal.querySelector('button.cancel');\n  var $modalButtons = modal.querySelectorAll('button[tabindex]');\n\n  if ([9, 13, 32, 27].indexOf(keyCode) === -1) {\n    // Don't do work on keys we don't care about.\n    return;\n  }\n\n  var $targetElement = e.target || e.srcElement;\n\n  var btnIndex = -1; // Find the button - note, this is a nodelist, not an array.\n  for (var i = 0; i < $modalButtons.length; i++) {\n    if ($targetElement === $modalButtons[i]) {\n      btnIndex = i;\n      break;\n    }\n  }\n\n  if (keyCode === 9) {\n    // TAB\n    if (btnIndex === -1) {\n      // No button focused. Jump to the confirm button.\n      $targetElement = $okButton;\n    } else {\n      // Cycle to the next button\n      if (btnIndex === $modalButtons.length - 1) {\n        $targetElement = $modalButtons[0];\n      } else {\n        $targetElement = $modalButtons[btnIndex + 1];\n      }\n    }\n\n    _stopEventPropagation$fireClick.stopEventPropagation(e);\n    $targetElement.focus();\n\n    if (params.confirmButtonColor) {\n      _setFocusStyle.setFocusStyle($targetElement, params.confirmButtonColor);\n    }\n  } else {\n    if (keyCode === 13) {\n      if ($targetElement.tagName === 'INPUT') {\n        $targetElement = $okButton;\n        $okButton.focus();\n      }\n\n      if (btnIndex === -1) {\n        // ENTER/SPACE clicked outside of a button.\n        $targetElement = $okButton;\n      } else {\n        // Do nothing - let the browser handle it.\n        $targetElement = undefined;\n      }\n    } else if (keyCode === 27 && params.allowEscapeKey === true) {\n      $targetElement = $cancelButton;\n      _stopEventPropagation$fireClick.fireClick($targetElement, e);\n    } else {\n      // Fallback - let the browser handle it.\n      $targetElement = undefined;\n    }\n  }\n};\n\nexports['default'] = handleKeyDown;\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}